
#  SPDX-License-Identifier: GPL-2.0-or-later
#  Copyright Â© 2023 Jacek Kobus

function genGPlotScript4etot {

    plot=plot
    #   plot=$(echo $plot \"$gpdata\" u 1:\(\$2+$offset\) w l t \"totEnergy\"  )
    plot=$(echo $plot \"$gpdata\" u 1:\(\$2\) w l t \"totEnergy\"  )
    # for ((i=1; i<=$norbs; i++ )); do
    # 	let j=$i+1
	

    # 	 (( $i < $norbs )) && plot=$(echo $plot ",")
    # done

    #set format y "%t"; set ytics (5,10)
    #set format y "%+-5.1f"; set ytics
    #set format y "10^{%L}"; set ytics
    #set mytics
    #set terminal postscript eps enhanced "Times-Roman" 18
    #set output '| display png:-'
    echo "set terminal png"                        > $gpscript
    echo "set output \"$plotDir/${system}-$method-etot.png\""             >> $gpscript

    echo set offsets $offsetLeft,$offsetRight,$offsetTop,$offsetBottom     >> $gpscript

    echo set auto fix                            >> $gpscript
    #echo set log x                               >> $gpscript
#    echo set offsets 0.05,0.15,1,1e-1            >> $gpscript

    echo "set xlabel \"$system separation (au)\""     >> $gpscript

    if [[ "$method" == "dft" ]]; then
	echo 'set ylabel "DFT total energy (au)"' >> $gpscript

    elif [[ "$method" == "hfs" ]]; then
	echo 'set ylabel "HFS total energy (au)"' >> $gpscript

    elif [[ "$method" == "hf" ]]; then
	echo 'set ylabel "HF total energy (au)"' >> $gpscript
    fi
#    echo set log y                               >> $gpscript
    echo $plot                                   >> $gpscript
#    echo pause 300                               >> $gpscript
    
}


function genGPlotScript4eorb {

    plot=plot
    for ((i=1; i<=$norbs; i++ ))
    do
	let j=$i+1
	let k=$i-1
	plot=$(echo $plot \"$gpdata\" u 1:$j w l t \"${orblabels[$k]}\"  )
	 (( $i < $norbs )) && plot=$(echo $plot ",")
    done

    echo "set terminal png"                        > $gpscript
    echo "set output \"$plotDir/${system}-$method-eorb.png\""             >> $gpscript
    echo set offsets $offsetLeft,$offsetRight,$offsetTop,$offsetBottom     >> $gpscript
    echo set auto fix                            >> $gpscript
#    echo set log x                               >> $gpscript
#    echo set offsets 0.05,0.15,1,1e-1            >> $gpscript

    echo "set xlabel \"$system separation (au)\""     >> $gpscript

    if [[ "$method" == "dft" ]]; then
	echo 'set ylabel "DFT orbital energies (absolute values in au)"' >> $gpscript

    elif [[ "$method" == "hfs" ]]; then
	echo 'set ylabel "HFS orbital energies (absolute values in au)"' >> $gpscript

    elif [[ "$method" == "hf" ]]; then
	echo 'set ylabel "HF orbital energies (absolute values in au)"' >> $gpscript
    fi

    #echo set log y                               >> $gpscript
    #echo set yrange [0.05:600]                   >> $gpscript
    echo $plot                                   >> $gpscript
#    echo pause 300                               >> $gpscript
    
}



function genPlot4etot {

    gpdata=$plotDir/$system-$method-etot.data
    gpscript=$plotDir/$system-$method-etot.gp

    [[ -z $plotDir ]] && echo "plotDir variable is not set ... " && exit

    cp /dev/null $gpdata

    offset=0
    for r in $rinit; do
	line=$r
	
	counter=$(cat $pwd/${system}-$r/.x2dhf-counter)
	lst=$system-$r/$system-$r-$method-${counter}.lst 	
	totalEnergy=$(grep 'total energy:              ' $lst|tail -1)
	totalEnergy=$(echo $totalEnergy | gawk -F: '{print $2}')
	#totalEnergy=$(echo $totalEnergy |perl -pe 's/([-\d.]+)e(?:\+|(-))?(\d+)/$1*10^$2$3/gi')	
	#totalEnergy=$(echo "$totalEnergy + $offset" | bc -l)
	line=$(echo $line "  " $totalEnergy)
	#echo -e '###'"\n" $line > /tmp/.line
	echo  $line > /tmp/.line
	cat /tmp/.line >> $gpdata
    done 

    for r in $rnext; do
	line=$r
	counter=$(cat $pwd/${system}-$r/.x2dhf-counter)
	lst=$system-$r/$system-$r-$method-${counter}.lst 	

	totalEnergy=$(grep 'total energy:              ' $lst|tail -1)
	totalEnergy=$(echo $totalEnergy | gawk -F: '{print $2}')
	#totalEnergy=$(echo $totalEnergy |perl -pe 's/([-\d.]+)e(?:\+|(-))?(\d+)/$1*10^$2$3/gi')	
	#totalEnergy=$(echo "$totalEnergy + $offset" | bc -l)
	line=$(echo $line "  " $totalEnergy)
	#echo -e '###'"\n" $line > /tmp/.line
	echo $line > /tmp/.line
	cat /tmp/.line >> $gpdata
    done

    genGPlotScript4etot

    
    if [[ $1 =~ dis ]]; then
	gnuplot < $gpscript
	display $plotDir/${system}-$method-etot.png
    fi
}



function genPlot4eorb {

    gpdata=$plotDir/$system-$method-eorb.data
    gpscript=$plotDir/$system-$method-eorb.gp

    [[ -z $plotDir ]] && echo "plotDir variable is not set ... " && exit

    cp /dev/null $gpdata

    for r in $rinit
    do
	line=$r
	
	counter=$(cat $pwd/${system}-$r/.x2dhf-counter)
	lst=$system-$r/$system-$r-$method-${counter}.lst 	
	[[ ! -e $lst ]] && echo "$lst does not exist ... " && exit
	grep -A$norbs -P '^\s+orbital\s+energy\s+1\-norm' $lst | tail -n $norbs | \
	    while read norb symmetry energy norm
	    do
		#energy=$(echo $energy | perl -pe 's/([-\d.]+)e(?:\+|(-))?(\d+)/$1*10^$2$3/gi' )
		#energy=$(echo "$energy + 0.0" | bc -l)
		line=$(echo $line "  " $energy )
		#echo -e '###'"\n" $line > /tmp/.line
		echo $line > /tmp/.line
            done
	cat /tmp/.line >> $gpdata
    done 

    for r in $rnext
    do
	line=$r
	counter=$(cat $pwd/${system}-$r/.x2dhf-counter)
	lst=$system-$r/$system-$r-$method-${counter}.lst 	
	[[ ! -e $lst ]] && echo "$lst does not exist ... " && exit
	grep -A$norbs -P '^\s+orbital\s+energy\s+1\-norm' $lst | tail -n $norbs | \
	    while read norb symmetry energy norm
	    do
		#energy=$(echo $energy | perl -pe 's/([-\d.]+)e(?:\+|(-))?(\d+)/$1*10^$2$3/gi' )
		#energy=$(echo "$energy + 0.0" | bc -l)
		line=$(echo $line "  " $energy )
		#echo -e '###'"\n" $line > /tmp/.line
		echo $line > /tmp/.line
        done
	cat /tmp/.line >> $gpdata
    done

    genGPlotScript4eorb

    if [[ $1 =~ dis ]]
    then
	gnuplot <$gpscript
	display $plotDir/${system}-$method-eorb.png
    fi

}

